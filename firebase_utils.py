import os
import firebase_admin
from firebase_admin import credentials, storage
from dotenv import load_dotenv

# üü¢ –ü—ä—Ä–≤–æ –∑–∞—Ä–µ–¥–∏ .env —Ñ–∞–π–ª–∞
load_dotenv()

# üîë –°–µ–≥–∞ –≤–µ—á–µ .env —Å—Ç–æ–π–Ω–æ—Å—Ç–∏—Ç–µ —â–µ —Å–µ –ø—Ä–æ—á–µ—Ç–∞—Ç –∫–æ—Ä–µ–∫—Ç–Ω–æ
FIREBASE_CREDENTIALS_PATH = os.getenv("FIREBASE_CREDENTIALS_PATH")
BUCKET_NAME = os.getenv("BUCKET_NAME")
LOCAL_SUBTITLE_DIR = "subtitles"

# üõ°Ô∏è –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–∞–π Firebase —Å–∞–º–æ –∞–∫–æ –Ω–µ –µ –≤–µ—á–µ
if not firebase_admin._apps:
    cred = credentials.Certificate(FIREBASE_CREDENTIALS_PATH)
    firebase_admin.initialize_app(cred, {
        'storageBucket': BUCKET_NAME
    })

# üîé –¢–µ—Å—Ç–≤–∞–Ω–µ: –ò–∑–≤–µ–¥–∏ —Å–ø–∏—Å—ä–∫ —Å blob-–æ–≤–µ (—Å–∞–º–æ –∑–∞ –æ—Ç—Å—Ç—Ä–∞–Ω—è–≤–∞–Ω–µ –Ω–∞ –≥—Ä–µ—à–∫–∏)
def test_list_blobs():
    bucket = storage.bucket()
    blobs = list(bucket.list_blobs())
    print(f"‚úÖ FOUND {len(blobs)} FILES:")
    for blob in blobs:
        print(blob.name)

# üîÅ –û—Å–Ω–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è
def sync_subtitles_from_firebase():
    bucket = storage.bucket()
    blobs = bucket.list_blobs(prefix="subtitles/")
    os.makedirs(LOCAL_SUBTITLE_DIR, exist_ok=True)
    print("üîê FIREBASE_CREDENTIALS_PATH:", FIREBASE_CREDENTIALS_PATH)
    print("ü™£ BUCKET:", bucket.name)
    print("üì¶ STORAGE LIB FROM:", storage.__file__)

    downloaded = []

    for blob in blobs:
        if blob.name.endswith(".srt"):
            filename = os.path.basename(blob.name)
            local_path = os.path.join(LOCAL_SUBTITLE_DIR, filename)
            if not os.path.exists(local_path):
                blob.download_to_filename(local_path)
                print(f"‚¨áÔ∏è –°–≤–∞–ª–µ–Ω –Ω–æ–≤ —Ñ–∞–π–ª: {filename}")
                downloaded.append(filename)

    if not downloaded:
        print("‚úÖ –ù—è–º–∞ –Ω–æ–≤–∏ —Å—É–±—Ç–∏—Ç—Ä–∏ –∑–∞ —Å–≤–∞–ª—è–Ω–µ.")

    return downloaded